[cleaner]
class_name = sidmodel.Cleaner
clean_dirs = eval({'resolve':
  {'d': 'path: ${sidmodel_default:data_dir}',
   'n': 'path: ${sidmodel_default:notes_text_dir}'}}):
  {'somewhat temporary files': d, 'notes': n}

[perf_metrics_dumper]
class_name = zensols.deeplearn.model.LatexPerformanceMetricsDumper
results_dir = path: ${sidmodel_default:root_dir}/results/perf
config_dir = path: ${sidmodel_default:root_dir}/../config
name_replace = eval: ['^([^_]+)_([^ ]+)(.*)\u0024', '\u0024\\\\textrm{\\1}_{\\2}\u0024\\3']

[import]
sections = list: obj_imp

[obj_imp]
type = importini
config_files = list:
    resource(zensols.nlp): resources/obj.conf,
    resource(zensols.nlp): resources/component.conf,
    resource(zensols.deeplearn): resources/obj.conf,
    resource(zensols.deepnlp): resources/obj.conf,
    resource(zensols.deepnlp): resources/glove.conf,
    resource(zensols.deepnlp): resources/word2vec.conf,
    resource(zensols.deepnlp): resources/transformer.conf,
    resource(zensols.deepnlp): resources/token-classify.conf,
    resource(zensols.deepnlp): resources/embed-crf.conf,
    resource(sidmodel): resources/corpus.conf,
    resource(sidmodel): resources/batch.conf,
    resource(sidmodel): resources/vectorizer.conf,
    resource(sidmodel): resources/transformer-fixed.conf,
    resource(sidmodel): resources/majorsent.conf,
    resource(sidmodel): resources/model.conf,
    resource(zensols.mimic): resources/obj.conf,
    resource(zensols.mimic): resources/decorator.conf,
    resource(sidmodel): resources/analysis.conf

# add before and after mimic imports and rebatch to add medical CUIs for the
# embedding analysis (embanalysis) module
#    resource(sidmodel): resources/med.conf,
