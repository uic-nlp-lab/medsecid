# embeddings
[transformer_fixed_resource]
model_id = bert-base-cased
cased = True

[transformer_fixed_embedding]
output = last_hidden_state

[transformer_sent_fixed_feature_vectorizer]
class_name = zensols.deepnlp.transformer.TransformerEmbeddingFeatureVectorizer
feature_id = transformer_sent_fixed
fold_method = separate
embed_model = instance: transformer_fixed_embedding
encode_transformed = ${deepnlp_default:transformer_encode_transformed}

# label vectorizers
[token_classify_label_trans_vectorizer]
embed_model = instance: transformer_fixed_embedding
fold_method = separate

# mask
[token_classify_mask_trans_vectorizer]
embed_model = instance: transformer_fixed_embedding
fold_method = separate

[transformer_fixed_feature_vectorizer]
# serialize (pickle) the decoded output to do the work up front
encode_transformed = False
